# -*- coding: utf-8 -*-
desc "Create the directory and initial slides (with SECTION=name)"
task :mksection do
  dir = ENV['SECTION']
  puts "** Creating section #{dir} **"
  FileUtils.mkdir_p(dir)
  unless File.exists?(File.join(dir, "01_slide.md"))
    puts "- populating slide template #{dir}/01_slide.md"
    File.open(File.join(dir, "01_slide.md"), "a+") do |f|
      f.puts "# #{section_header(dir)}\n"
      f.puts copyright_header
      f.puts section_objectives
      f.puts section_summary
      f.puts section_exercise
      f.puts "## #{section_header(dir)}"
    end
    puts "- populating exercises #{dir}.md"
    File.open(File.join("..", "guides", "student-exercises", "#{dir}.md"), "a+") do |g|
      g.puts exercise_guide(dir)
    end
  end
end

def section_header(section = "welcome")
  lcase = %w{an of the a}
  parts = section.split(/[-_]/)
  header = Array(parts).flatten.map {|p| lcase.include?(p) ? p : p.capitalize }
  header.join(' ')
end

def copyright_header
  "\n.notes These course materials are Copyright Â© 2010-2011 Opscode, Inc. All rights reserved.
This work is licensed under a Creative Commons Attribution Share Alike 3.0 License. To view a copy of this license, visit http://creativecommons.org/licenses/by-sa/3.0/; or send a letter to Creative Commons, 171 2nd Street, Suite 300, San Francisco, California, 94105, USA.\n\n"
end

def section_objectives
  "# Objectives\n\n\n"
end

def section_summary
  "# Summary\n\n\n"
end

def section_exercise
  "# Lab Exercise\n\n"
end

def exercise_guide(section = "welcome")
  "#{section_header(section)}\n======================\n\n## Objectives\n\n## Acceptance Criteria\n\n## Quesetions\n"
end
